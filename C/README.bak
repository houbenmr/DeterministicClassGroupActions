--------------------------------------------------------
This code is based on a CSIDH implementation originally
associated to the CSIDH paper [1], version 26/08/2018.
The original code is publicly available at
https://yx7.cc/code/csidh/csidh-20180826.tar.xz
--------------------------------------------------------

The purpose is to showcase a fully deterministic
implementation of the CSIDH-512 protocol.
It contains a precise count for the number of calls to
finite field operations (per type) in assembly.

The benchmarking tool is built using

"make bench"

The output should verify that the number of
Fp-operations per group action is fixed,
i.e. independent of the secret key.

The code presented here is not meant to
execute in a constant number of CPU cycles;
this depends on more than just the Fp-operation count.

It is also not meant to be efficient.
There are many optimizations to the CSIDH protocol
that are not included here.

[1] Castryck, W., Lange, T., Martindale, C., Panny, L., Renes, J.:
CSIDH: An efficient post-quantum commutative group action.
ASIACRYPT 2018, https://doi.org/10.1007/978-3-030-03332-3_15

